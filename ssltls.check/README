 Original author: Simon Kowallik <sk simonkowallik.com>
 Forker : MJ
 Version: 1.1
 License: GPL2

DESCRIPTION
===========
 This script uses openssl s_client to check the availability of SSL or TLS services.
 Additionally it is possible to query different attributes of the x509 certificate
 of the queried SSL/TLS service. All native SSL encapsulated services should work,
 basically all SSL versions suppored by OpenSSL should work. As OpenSSL s_client also
 supports STARTTLS, ssltls.check supports it too. This means smtp pop3 imap ftp xmpp
 should work with STARTTLS.

 This script is intended for use with Zabbix 2.0
 
 26/09/2017  :added support for FQDN and SNI

REQUIRES
========
  - bash
  - openssl
  - coreutils


USAGE
=====
  * Shell:             ARG1    ARG2     ARG3
   >  ssltls.check HOST:PORT METHOD CHECK_TYPE

 ARG1: HOST:PORT
       HOST is either a Hostname or an IP Address.
       PORT is the TCP Port of the Service which should be checked.

 ARG2: METHOD
       METHOD either the Service which should be used for STARTTLS (i.e. smtp, pop3)
       or "native" for SSL/TLS encapsulated Services like HTTPS or IMAPS.

 ARG3: CHECK_TYPE
       CHECK_TYPE specifies what attribute should be checked and returned.


 This is the list of supported CHECK_TYPES:
 
   * SSL/TLS Availability Check
         CHECK_TYPE: simple
         Return type: boolean
         1: for Service is running 
         0: for Service is down

   * Certificate Attribute Checks                                                                                                                                          
       * CHECK_TYPE: lifetime                                                                                                                                                  
         Desc: Returns certificate lifetime in seconds from NOW                                                                                                                
         Return type:int                                                                                                                                                       

       * CHECK_TYPE: startdate
	 Desc: Returns certificate start date, example: Feb 22 10:22:35 2012 GMT
         Return type:text

       * CHECK_TYPE: enddate
 	 Desc: Returns certificate end date, example: Feb 23 15:31:40 2013 GMT
         Return type:text

       * CHECK_TYPE: serial
	 Desc: Returns certificate Serial Number, example: C058924
         Return type:hex

       * CHECK_TYPE: fingerprint
	 Desc: Returns certificate cryptographic fingerprint.
	       Example: DF:0C:6E:D0...2B:69
	       Fingerprints can be SHA1, MD5 and other Crypto Hash Functions,
	       therefore the length of the returned value can differ.
         Return type:text

       * CHECK_TYPE: subject
	 Desc: Returns the Subject Name of the certificate.
         Return type:text

       * CHECK_TYPE: issuer
	 Desc: Returns the Issuer Name of the certificate.
         Return type:text

       * CHECK_TYPE: subject_hash
	 Desc: Returns OpenSSL Certificate Hash, example: 565e8c5a
         Return type:hex

       * CHECK_TYPE: issuer_hash
	 Desc: Returns OpenSSL Certificate Hash of Issuer Certificate.
	       Example: 38d751eb
         Return type:hex

EXAMPLES
========
 Check if SSL/TLS Handshake works for SMTP Service on {HOST.IP} with smtp STARTTLS
   Item Key: ssltls.check[{HOST.IP}:25,smtp,simple]
   Type of Information: Numeric (unsigned)
   Data Type: boolean
   Use from shell: ssltls.check hostip:25 smtp simple

 Check if SSL/TLS Handshake works for HTTPS (HTTP over SSL/TLS) on {HOST.IP]
   Item Key: ssltls.check[{HOST.IP}:443,native,simple]
   Type of Information: Numeric (unsigned)
   Data Type: boolean
   Use from shell: ssltls.check hostip:443 native simple

 Query the lifetime of the Certificate on {HOST.NAME}, lifetime is returned in Seconds from now.
   Item Key: ssltls.check[{HOST.NAME}:443,native,lifetime]
   Type of Information: Numeric (unsigned)
   Data Type: Decimal 
   Use from shell: ssltls.check hostname:443 native lifetime

 Query certificate fingerprint from IMAPS Service (TCP 993) on {HOST.NAME}
   Item Key: ssltls.check[{HOST.NAME}:993,native,fingerprint]
   Type of Information: Character
   Use from shell: ssltls.check hostname:993 native fingerprint


ADDITIONAL PARAMETERS
=====================
  Path to OpenSSL, echo and timeout(coreutils) binaries should be set, if they differ.
  TIMEOUT specifies the connect timeout of openssl.

